mysteryLanguage {
  Func        =  "fun" identifier "(" Params ")" "{" Block "}"
  Params      =  ListOf<identifier, ",">
  Block       =  (Stmt)*
  Stmt = Exp ";"
  			| Cond ";"  
        | Call ";"
  Call        =  identifier "(" Params ")"
  Cond        =  Exp "if" Exp "else" Exp
  Exp         =  Exp "or" Exp1                    --binary
              |  Exp1
  Exp1        =  Exp1 "and" Exp2                  --binary
              |  Exp2
  Exp2        =  Exp3 relop Exp3                  --binary
              |  Exp3
  Exp3        =  Exp3 addop Exp4                  --binary
              |  Exp4
  Exp4        =  Exp4 mulop Exp5                  --binary
              |  Exp5
  Exp5        =  prefixop Exp6                    --unary
              |  Exp6
  Exp6        =  Exp7 postfixop                   --unary
              |  Exp7
  Exp7        =  Literal 
              |  identifier 
              |  "(" Exp ")" 		                  --parens
  Literal     =  numlit
              |  stringlit
  identifier  = (letter | "$")(letter | digit | "@" | "$" | "_")*
  relop       =  "<=" | "<" | "==" | "!=" | ">=" | ">"
  addop       =  "+" | "-"
  mulop       =  "*" | "/" | "%"
  prefixop    =  ~"--" "-"
  postfixop   =  "!"
  numlit      =  digit+ ("." digit+ (("E"|"e") ("+"|"-")? digit+)?)?
  stringlit   =  "\"" (char | "\'")* "\"" ";"
  char        =  escape
              |  ~"\\" ~"\"" ~"'" ~"\n" any
  h           =  hexDigit
  escape      =  "\\\\" | "\\\"" | "\\'" | "\\n" | "\\t" | hexseq
  hexseq      =  "\\" h h? h? h? h? h? h? h? ";"
  space      :=  "\x20" | "\x09" | "\x0A" | "\x0D" | comment
  comment     =  "/*" (any)* "*/" | "--" (~"\n" any)* "\n"
}