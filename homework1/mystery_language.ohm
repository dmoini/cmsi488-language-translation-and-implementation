mysteryLanguage {
FunctionDeclaration = "fun" identifier"("Params")" "{" Expression "}"
Params = ListOf<identifier, ",">
Call = identifier"("ListOf<Expression, ",">")"
Expression =  Expression "or" Exp1   -- disjunction 
                |  Exp1
Exp1        =  Exp1 "and" Exp2  --conjunction 
                |  Exp2
Exp2        =  Exp3 relop Exp3  --binary
                |  Exp3
Exp3        =  Exp3 addop Exp4      -- additionsubtraction             
                |  Exp4
Exp4        =  Exp4 mulop Exp5       --multiplicationdivision          
                |  Exp5
Exp5        =  prefixop Exp6       --unary           
                |  Exp6
Exp6        = postfixop Exp6    --posturnary
			    | Exp6  
Exp7	    = Literal                     --otehr     
				| Exp8                
Literal     =  "null"
              |  "true"
              |  "false"
              |  stringlit
Exp8        =  Call     --functioncall   
                | Conditional
Conditional = Expression "if" Expression "else" Expression
identifier = letter | digit+
addop       =  "+" | "-"
relop       =  "<=" | "<" | "==" | "!=" | ">=" | ">"
mulop       =  "*" | "/" | "%"
prefixop    =  ~"--" "-" | "not"
postfixop = "!"
stringlit   =  "\"" (char | "\'")* "\""
char        =  escape
              |  ~"\\" ~"\"" ~"'" ~"\n" any
              
h           =  hexDigit
  escape      =  "\\\\" | "\\\"" | "\\'" | "\\n" | "\\t" | hexseq
  hexseq      =  "\\" h h? h? h? h? h? h? h? ";"
}